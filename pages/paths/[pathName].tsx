import { paths, populatePath, PopulatedPath } from '../../data'
import { GetStaticPaths, GetStaticProps, InferGetStaticPropsType, ParsedUrlQuery, Head, Header, Main } from '../../src/shared'
import { Path } from '../../src/path'

interface Params extends ParsedUrlQuery {
    pathName: string
}

interface StaticProps {
    path: PopulatedPath
}

export const getStaticPaths: GetStaticPaths = async () => {
    const staticPaths = Object.keys(paths).map((pathName) => ({
        params: { pathName }
    }))

    return { paths: staticPaths, fallback: false }
}

export const getStaticProps: GetStaticProps<StaticProps, Params> = async ({ params }) => {
  const path = paths[params!.pathName]
  const populatedPath = populatePath(path)

  return {
    props: {
      path: populatedPath,
    }
  }
}

type Props = InferGetStaticPropsType<typeof getStaticProps>

export default function Home({ path }: Props) {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <Main>
        <Path path={path} />
      </Main>

    </div>
  )
}

